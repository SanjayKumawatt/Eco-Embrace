import React, { useState } from 'react'; // useState added
import { Link } from 'react-router-dom';
// ЁЯСИ Cart Context рдХреЛ рдЗрдореНрдкреЛрд░реНрдЯ рдХрд░реЗрдВ (рдкрд╛рде рдПрдбрдЬрд╕реНрдЯ рдХрд░реЗрдВ)
import { useCart } from '../context/CartContext'; 

import img1 from "../assets/earth-tones-terracotta-jewelry/img1.webp";
import img2 from "../assets/earth-tones-terracotta-jewelry/img2.webp";
import img3 from "../assets/earth-tones-terracotta-jewelry/img3.webp";
import img4 from "../assets/earth-tones-terracotta-jewelry/img4.jpg";
import img5 from "../assets/earth-tones-terracotta-jewelry/img5.webp";
import img6 from "../assets/earth-tones-terracotta-jewelry/img6.jpg";
import img7 from "../assets/earth-tones-terracotta-jewelry/img7.jpg";
import img8 from "../assets/earth-tones-terracotta-jewelry/img8.webp";

// --- Placeholder Product Data for Terracotta Jewelry ---
// Note: Replace the image imports/paths with your actual assets
export const terracottaProducts = [
┬а // Row 1
┬а { id: 201, name: "New Beginnings GOODLUCK Pendants Mural Terracotta Pendant Ear...", price: "Rs. 2,790.00", imageUrl: img1, sku: "TC201", quantityOptions: ['1', '2', '3'] },
┬а { id: 202, name: "3 Layer Antique Karen Set Terracotta Jewelry in USA |...", price: "Rs. 990.00", imageUrl: img2, sku: "TC202", quantityOptions: ['1', '2', '3'] },
┬а { id: 203, name: "Clay Stud Earrings Artisan Handmade Jewelry Organic Natural Eco Friendly...", price: "Rs. 990.00", imageUrl: img3, sku: "TC203", quantityOptions: ['1', '2', '3'] },
┬а { id: 204, name: "Clay Stud Earrings Artisan Handmade Jewelry Organic Natural Eco Friendly...", price: "Rs. 990.00", imageUrl: img4, sku: "TC204", quantityOptions: ['1', '2', '3'] },
┬а // Row 2
┬а { id: 205, name: "Clay Stud Earrings Artisan Handmade Jewelry Organic Natural Eco Friendly...", price: "Rs. 990.00", imageUrl: img5, sku: "TC205", quantityOptions: ['1', '2', '3'] },
┬а { id: 206, name: "Artisan Handmade Ecofriendly Handpainted Terracotta Dangler Earrings - Earrings...", price: "Rs. 990.00", imageUrl: img6, sku: "TC206", quantityOptions: ['1', '2', '3'] },
┬а { id: 207, name: "Artisan Handmade Ecofriendly Handpainted Terracotta Dangler Earrings - Earrings...", price: "Rs. 990.00", imageUrl: img7, sku: "TC207", quantityOptions: ['1', '2', '3'] },
┬а { id: 208, name: "Clay Stud Earrings Artisan Handmade Jewelry Organic Natural Eco Friendly...", price: "Rs. 990.00", imageUrl: img8, sku: "TC208", quantityOptions: ['1', '2', '3'] },
];

// Reusable Product Card Component (NOW FUNCTIONAL)
const ProductCard = ({ product }) => {
    // Dropdown options
    const options = product.quantityOptions || ['1']; 
    
    // ЁЯСИ 1. Quantity State: Dropdown selection рдХреЛ рдЯреНрд░реИрдХ рдХрд░реЗрдВ
    // Note: Quantity рдХреЛ string рдореЗрдВ рд╕реНрдЯреЛрд░ рдХрд░реЗрдВ, рдФрд░ default value рд╕реЗрдЯ рдХрд░реЗрдВ
    const [selectedQuantity, setSelectedQuantity] = useState(options[0]); 
    
    // ЁЯСИ 2. useCart Hook
    const { addToCart, toggleCartDrawer } = useCart();

    const handleAddToCart = (e) => {
        e.preventDefault(); 
        e.stopPropagation(); 
        
        // ЁЯСИ 3. Cart рдореЗрдВ Item рдФрд░ Selected Quantity (number рдореЗрдВ) рднреЗрдЬреЗрдВ
        addToCart(
            product, 
            parseInt(selectedQuantity), // Quantity рдХреЛ integer рдореЗрдВ рдХрдиреНрд╡рд░реНрдЯ рдХрд░реЗрдВ
            {} // рдХреЛрдИ рдСрдкреНрд╢рди рдирд╣реАрдВ, рд╕рд┐рд░реНрдлрд╝ рдХреНрд╡рд╛рдВрдЯрд┐рдЯреА
        );
        
        // Cart Drawer рдХреЛ рдЦреЛрд▓реЗрдВ
        toggleCartDrawer(); 
    };

┬а   return (
┬а ┬а ┬а <div className="bg-white border border-gray-100 rounded-lg overflow-hidden transition-shadow duration-300 hover:shadow-xl group">
┬а ┬а ┬а ┬а 
┬а ┬а ┬а ┬а {/* Product Image Link */}
┬а ┬а ┬а ┬а <Link to={`/product/${product.sku}`} className="block w-full h-64 sm:h-72 overflow-hidden bg-gray-50">
┬а ┬а ┬а ┬а ┬а <img
┬а ┬а ┬а ┬а ┬а ┬а src={product.imageUrl}
┬а ┬а ┬а ┬а ┬а ┬а alt={product.name}
┬а ┬а ┬а ┬а ┬а ┬а className="w-full h-full object-cover object-center transition-transform duration-500 group-hover:scale-105"
┬а ┬а ┬а ┬а ┬а />
┬а ┬а ┬а ┬а </Link>

┬а ┬а ┬а ┬а {/* Product Details and CTA */}
┬а ┬а ┬а ┬а <div className="p-3 text-center">
┬а ┬а ┬а ┬а ┬а ┬а {/* Product Name Link */}
┬а ┬а ┬а ┬а ┬а ┬а <Link to={`/product/${product.sku}`} className="block text-xs font-medium text-gray-700 hover:text-indigo-600 mb-2 h-10 overflow-hidden">
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а {product.name}
┬а ┬а ┬а ┬а ┬а ┬а </Link>

┬а ┬а ┬а ┬а ┬а ┬а {/* Price */}
┬а ┬а ┬а ┬а ┬а ┬а <p className="text-base font-semibold text-gray-900 mb-3">
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а {product.price}
┬а ┬а ┬а ┬а ┬а ┬а </p>

┬а ┬а ┬а ┬а ┬а ┬а {/* Quantity Dropdown and Add to Cart */}
┬а ┬а ┬а ┬а ┬а ┬а <div className="flex items-center space-x-2">
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а {/* Quantity Dropdown */}
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а {product.quantityOptions && product.quantityOptions.length > 0 && (
                    <select
                        className="w-1/4 p-2 text-sm border border-gray-300 rounded-md focus:ring-indigo-500 focus:border-indigo-500"
                        value={selectedQuantity} // ЁЯСИ State рд╕реЗ value рд▓реЗрдВ
                        onChange={(e) => setSelectedQuantity(e.target.value)} // ЁЯСИ State рдЕрдкрдбреЗрдЯ рдХрд░реЗрдВ
                    >
                        {options.map((qty, index) => (
                            <option key={index} value={qty}>{qty}</option>
                        ))}
                    </select>
                )}
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а 
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а <button
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а type="button"
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а className="w-3/4 py-2 text-sm font-semibold text-white bg-neutral-800 rounded-md transition duration-300 hover:bg-indigo-600 focus:outline-none focus:ring-2 focus:ring-indigo-500"
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а onClick={handleAddToCart} // ЁЯСИ Updated Handler
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а >
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ADD TO CART
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а </button>
┬а ┬а ┬а ┬а ┬а ┬а </div>
┬а ┬а ┬а ┬а </div>
┬а ┬а </div>
┬а );
};

// Main Component
const TerracottaJewelry = () => {
┬а return (
┬а ┬а <div className="bg-white min-h-screen">
┬а ┬а ┬а 
┬а ┬а ┬а {/* 1. Header/Toolbar (Filters and Sorting - Simplified) */}
┬а ┬а ┬а <div className="container mx-auto px-4 sm:px-6 lg:px-8 py-4 border-b border-gray-200 flex justify-end items-center text-sm text-gray-600">
┬а ┬а ┬а ┬а 
┬а ┬а ┬а ┬а {/* Sort By (Simplified to match the available space in the toolbar) */}
┬а ┬а ┬а ┬а <div className="flex items-center space-x-2">
┬а ┬а ┬а ┬а ┬а <label htmlFor="sort" className="hidden sm:block">Sort By</label>
┬а ┬а ┬а ┬а ┬а <select id="sort" className="border border-gray-300 rounded-md p-1 focus:ring-indigo-500 focus:border-indigo-500">
┬а ┬а ┬а ┬а ┬а ┬а <option>Best sellers</option>
┬а ┬а ┬а ┬а ┬а ┬а <option>Price: Low to High</option>
┬а ┬а ┬а ┬а ┬а ┬а <option>Price: High to Low</option>
┬а ┬а ┬а ┬а ┬а </select>
┬а ┬а ┬а ┬а </div>
┬а ┬а ┬а </div>

┬а ┬а ┬а {/* 2. Product Grid */}
┬а ┬а ┬а <div className="container mx-auto px-4 sm:px-6 lg:px-8 py-8">
┬а ┬а ┬а ┬а 
┬а ┬а ┬а ┬а <div className="grid grid-cols-2 gap-x-4 gap-y-10 sm:gap-x-6 lg:gap-x-8 lg:grid-cols-4">
┬а ┬а ┬а ┬а ┬а {terracottaProducts.map((product) => (
┬а ┬а ┬а ┬а ┬а ┬а <ProductCard key={product.id} product={product} />
┬а ┬а ┬а ┬а ┬а ))}
┬а ┬а ┬а ┬а </div>
┬а ┬а ┬а </div>
┬а ┬а </div>
┬а );
};

export default TerracottaJewelry;